<html><head><title>FuseBox API</title><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"></head><body><p>Fusebox 3 API</p><p>Fusebox 3 exposes a series of variables to help in writing code:</p><table border="0" cellspacing="2" cellpadding="2">	<tr valign="top">		<td>Public API variable</td>		<td>Type</td>		<td align="center">Writable</td>		<td>Description</td>	</tr>	<tr valign="top">		<td>Fusebox.isCustomTag</td>		<td>BOOLEAN</td>		<td align="center">NO</td>		<td>Is this fusebox being called as		a custom tag?</td> </tr>	<tr valign="top">		<td>Fusebox.isHomeCircuit</td>		<td>BOOLEAN</td>		<td align="center">NO</td>		<td>Is the directory of the file currently being operated on			by FBX_Fusebox_CFxx.cfm the same as the home circuit			of the app?</td> </tr>	<tr valign="top">		<td>Fusebox.isTargetCircuit</td>		<td>BOOLEAN</td>		<td align="center">NO</td>		<td>Is the directory of the file currently being operated on			by FBX_Fusebox_CFxx.cfm the same as the target circuit			of the app?</td> </tr>	<tr valign="top">		<td>Fusebox.fuseaction</td>		<td>STRING</td>		<td align="center">NO</td>		<td>The simple fuseaction extracted from the attributes.fuseaction			of form circuit.fuseaction passed in.</td> </tr>	<tr valign="top">		<td>Fusebox.circuit</td>		<td>STRING</td>		<td align="center">NO</td>		<td>The simple circuit extracted from the attributes.fuseaction			of form circuit.fuseaction passed in.</td>	</tr>	<tr valign="top">		<td>Fusebox.homeCircuit</td>		<td>STRING</td>		<td align="center">NO</td>		<td>The circuit alias of the home circuit			of the app.</td>	</tr>	<tr valign="top">		<td>Fusebox.targetCircuit</td>		<td>STRING</td>		<td align="center">NO</td>		<td>The circuit alias of the target circuit of the app. Usually			this is the same as fusebox.circuit unless you've			made a circuits definition error.</td>	</tr>	<tr valign="top">		<td>Fusebox.thisCircuit</td>		<td>STRING</td>		<td align="center">NO</td>		<td>The circuit alias of the directory of the file currently			being operated on by FBX_Fusebox_CFxx.cfm.</td>	</tr>	<tr valign="top">		<td>Fusebox.thisLayoutFile</td>		<td>STRING</td>		<td align="center">YES</td>		<td>The layout file to be applied to this circuit after the			fuseaction and its fuse(s) are done creating their			content.</td>	</tr>	<tr valign="top">		<td>Fusebox.thisLayoutDir</td>		<td>STRING</td>		<td align="center">YES</td>		<td>The relative path from the target circuit where the layout			file to be applied to this circuit is located.			If no special layout directory has been created,			this should	be set to an empty string.</td>	</tr>	<tr valign="top">		<td>Fusebox.CurrentPath</td>		<td>STRING</td>		<td align="center">NO</td>		<td>The relative directory path of the file currently being			operated on by FBX_Fusebox_CFxx.cfm, relative			from the root of the application (ie the home circuit).			Example: dir1/dir2/dir3/</td>	</tr>	<tr valign="top">		<td>Fusebox.RootPath</td>		<td>STRING</td>		<td align="center">NO</td>		<td>The relative directory path of the file currently being			operated on by the core frozen fusebox code, relative			to the root of the application (ie the home circuit).			Example: ../../../</td>	</tr>	<tr valign="top">		<td>Fusebox.layout</td>		<td>STRING</td>		<td align="center">NO</td>		<td>This is the variable used by cfsavecontent or its equivalent			custom tag that captures the generated content to			that point in preparation for wrapping a layout file			around it (as defined by fusebox.layoutfile). This<br>			variable must be inside each layout file in order for content			to be passed up to the next level of nested layouts.</td>	</tr>	<tr valign="top">		<td>Fusebox.SuppressErrors</td>		<td>BOOLEAN</td>		<td align="center">YES</td>		<td>FBX_Fusebox_CFxx.cfm has some abilities built in to suppress			native ColdFusion errors and instead give its best			guess at what it wrong with your application (as			it relates to Fusebox). Default value is always FALSE,			which therefore generates native ColdFusion errors.			You may want to set it to TRUE while you set up your			application	in Fusebox style and let it default to			FALSE when you're confident that your Fusebox is			set up correctly but are testing for coding errors			in your fuses unrelated to Fusebox.</td>	</tr></table></body></html>